# Generated by Django 4.2.4 on 2023-08-31 07:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0004_auto_20230830_1912'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(default=None)),
                ('reply_message', models.TextField(default=None)),
                ('team_id', models.IntegerField()),
                ('user_id', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='未命名团队', max_length=20, verbose_name='团队名称')),
                ('actual_team', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(max_length=50, null=True, verbose_name='团队描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('cover_url', models.URLField(default='https://summer-1315620690.cos.ap-beijing.myqcloud.com/team_cover/default.png', verbose_name='团队封面')),
                ('is_private', models.BooleanField(default=False, verbose_name='是否为私聊')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_team_user', to='user.user', verbose_name='创建者')),
            ],
        ),
        migrations.CreateModel(
            name='UserTeamChatStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unread_count', models.PositiveIntegerField(default=0)),
                ('is_at', models.BooleanField(default=False)),
                ('is_at_all', models.BooleanField(default=False)),
                ('index', models.IntegerField(default=0)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserNoticeChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=255, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserChatChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=255, unique=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice_type', models.CharField(choices=[('chat_mention', 'Chat Mention'), ('document_mention', 'Document Mention')], max_length=50)),
                ('content', models.TextField(blank=True, default=None, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('associated_resource_id', models.IntegerField()),
                ('position_info', models.TextField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='文件地址')),
                ('name', models.CharField(max_length=50, verbose_name='文件名')),
                ('audio', models.BooleanField(default=False, verbose_name='是否为音频')),
                ('duration', models.IntegerField(default=0, verbose_name='音频时长')),
                ('size', models.IntegerField(default=0, verbose_name='文件大小')),
                ('preview', models.URLField(default=None, null=True, verbose_name='文件预览地址')),
                ('progress', models.IntegerField(default=0, verbose_name='文件上传进度')),
                ('chat_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.chatmessage')),
            ],
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='files',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.file'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='forwarded_from',
            field=models.ManyToManyField(blank=True, to='chat.chatmessage'),
        ),
        migrations.CreateModel(
            name='ChatMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('CR', '创建者'), ('MG', '管理者'), ('MB', '普通成员')], default='MB', max_length=2)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_member_user', to='user.user', verbose_name='成员')),
            ],
        ),
    ]
